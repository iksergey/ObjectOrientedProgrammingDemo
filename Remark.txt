ООП Инкапсуляция    https://www.youtube.com/watch?v=Jdzp4_AHFPE
ООП Наследование    https://www.youtube.com/watch?v=e1iWpkliiWU
ООП Полиморфизм     https://www.youtube.com/watch?v=7dDe3yGWZBo
ООП Абстракция I    https://www.youtube.com/watch?v=raYDIbchpl8
ООП Абстракция II   https://www.youtube.com/watch?v=_2Y0Jep8dQA


ООП - Подход к разработке ПО, в котором основными "действующими элементами"
      являются классы и экземпляры этих классов

Класс - это конструкция языка, описывающая общее состояние и поведение 
        объектов "действительной" реальности в "виртуальной реальности"

Экземпляр класса - определяет конкретное состояние и поведение отдельно взятого элемента

Объект - сущность, содержащая общие для всех экземпляров функциональные единицы

Модификаторы доступа

ООП техники

Инкапсуляция - Механика 1. объединения данных и логики их обработки
                        2. сокрытие деталей отдельных программных единиц 

Наследование - это возможность передать доступныe (публичные и защищенные) 
               состояния и поведения наследнику


Полиморфизм - возможность динамической подмены объекта в процессе выполнения
            - возможность объектов с одинаковой спецификацией иметь различную реализацию
            - способность функции обрабатывать данные разных типов

            ad-hoc (мнимый)
            Параметрический (классический )
                техника переопределений
                техника приведения типов

                замечание: техника переопределений преобладает над техникой приведения 

UpCast - приведение экземпляра производного класса к базовому

DownCast - приведение экземпляра базового типа к производному

DownCast невозможен без UpCast'a
 


Абстракция предназначена для работы с объектами не вдаваясь в детали их реализации
           
           - aбстракция в С# неразрывно связана с абстрактными классами и интерфейсами
           
           - формирование у сущностей только тех характеристик, 
             которые точно определяют его в данной системе

           - способ выделения главных характеристик объектов действительной реальности 
             с целью последующей реализации в конкретном объекте виртуальной реальности 


Абстрактный класс - класс, не подразумевающий возможности явного создания экземпляров
           Что может содержать абстрактный класс
                абстрактное и не абстрактное
                наследник должен реализовать всё абстрактное
 

Интерфейс - контракт указывающий на конкретную реализацию характеристик 
            или использование имеющихся в нём

    
            Класс/структура может реализовывать несколько интерфейсов
            Интерфейсы определяют поведение классов, структур

 

Связанность —	способ и степень взаимозависимости между программными модулями;
                сила взаимосвязей между модулями;
                мера того, насколько взаимозависимы разные подпрограммы или модули

                ! насколько один объект зависит от другого объекта


Связность —		мера силы взаимосвязанности элементов внутри модуля;
                способ и степень, при которой задачи,
                выполняемые некоторым программным модулем, 
                связаны друг с другом.

                ! насколько объект самодостаточен

Проектировать нужно так, чтобы сущности были слабо СВЯЗАННЫМИ, но обладать достаточной СВЯЗНОСТЬЮ